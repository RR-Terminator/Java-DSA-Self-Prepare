package Arrays.BinarySearch;

public class MinimumCandies {
    public static void main(String[] args) {
        int[] arr = {2494780,1592837,7688066,1868774,2432917,5203720,949491,7513696,4187818,9428510,5691922,6916435,9270585,4906175,2003057,1758771,4487240,7978392,3657473,1527836,2864782,8011043,423236,2215550,831522,9193620,2660916,9943144,5565788,7744189,6842044,7830828,4113180,632993,5867911,981359,3235455,377855,4108670,6787177,6062693,1607550,8417505,7466966,4209082,167983,648973,8945833,6311280,1039771,5637121,2712141,2267125,5395616,5772695,6029385,3765884,9083820,6116481,8371054,9666735,4245829,3627056,9416857,1975584,279098,9426523,5975784,1966958,5229593,8410303,2515621,90934,7882119,348048,2436749,3141310,810727,2862321,6756687,1263096,7329788,715981,3378520,5318321,1489152,4973294,1794353,2724016,2588458,5451653,6296651,3445857,9014893,2784180,4768509,7080332,2257597,7481798,5687098,6387657,5627678,1538697,4773688,9158032,412261,3734161,4423426,5319883,5482817,3289097,1864011,1872358,7572241,4245128,121622,810527,978440,3534327,1592144,4736178,9730057,6501686,7658105,9493859,2334335,3485606};
        System.out.println(maximumCandies(arr, 11));
    }

    public static int maximumCandies(int[] candies, long k) {


        long s = 1;
        long e = Integer.MIN_VALUE;


        for (int candie : candies) {
            e = Math.max(e, candie);
        }

       int ans = 0;

        while (s <= e) {
            long mid = s + (e - s) / 2;


            if (isPossible(mid, candies, k)) {
                ans =(int) mid;
                s = mid + 1;
            } else e = mid - 1;


        }
        return ans;
    }


    static boolean isPossible(long candie, int[] candies, long k) {

        long satis_child = 0;
        for (int i = 0; i < candies.length; i++) {
            long can_satisfy = candies[i] / candie;
            satis_child += can_satisfy;
        }

        return satis_child >= k;
    }
}
